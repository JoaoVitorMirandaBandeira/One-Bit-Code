/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("var average = function average() {\n  for (var _len = arguments.length, numbers = new Array(_len), _key = 0; _key < _len; _key++) {\n    numbers[_key] = arguments[_key];\n  }\n  var sum = numbers.reduce(function (accum, num) {\n    return accum + num;\n  }, 0);\n  return sum / numbers.length;\n};\nconsole.log(\"M\\xE9dia Simples: \".concat(average(3, 6, 10, 9)));\nvar weightedAverage = function weightedAverage() {\n  for (var _len2 = arguments.length, entries = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    entries[_key2] = arguments[_key2];\n  }\n  var sum = entries.reduce(function (accum, _ref) {\n    var number = _ref.number,\n      weight = _ref.weight;\n    return accum + number * weight;\n  }, 0);\n  var weightSum = entries.reduce(function (accum, entry) {\n    return accum + entry.weight;\n  }, 0);\n  return sum / weightSum;\n};\nconsole.log(\"M\\xE9dia Ponderada: \".concat(weightedAverage({\n  number: 9,\n  weight: 3\n}, {\n  number: 7,\n  weight: 1\n}, {\n  number: 10,\n  weight: 1\n})));\nvar median = function median() {\n  for (var _len3 = arguments.length, numbers = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    numbers[_key3] = arguments[_key3];\n  }\n  var orderedNumbers = [].concat(numbers).sort(function (a, b) {\n    return a - b;\n  });\n  var middle = Math.floor(orderedNumbers.length / 2);\n  if (orderedNumbers.length % 2 !== 0) {\n    return orderedNumbers[middle];\n  }\n  var firstMedian = orderedNumbers[middle - 1];\n  var secondMedian = orderedNumbers[middle];\n  return average(firstMedian, secondMedian);\n};\nconsole.log(\"Mediana: \".concat(median(2, 5, 99, 4, 42, 7)));\nconsole.log(\"Mediana: \".concat(median(15, 14, 8, 7, 3)));\nvar mode = function mode() {\n  for (var _len4 = arguments.length, numbers = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    numbers[_key4] = arguments[_key4];\n  }\n  var quantities = numbers.map(function (number) {\n    return [number, numbers.filter(function (n) {\n      return number === n;\n    }).length];\n  });\n  quantities.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  return quantities[0][0];\n};\nconsole.log(\"Moda: \".concat(mode(1, 1, 5, 4, 9, 7, 4, 3, 5, 2, 4, 0, 4)));\n\n//# sourceURL=webpack://exercicio-final/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;